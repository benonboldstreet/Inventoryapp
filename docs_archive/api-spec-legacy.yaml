openapi: 3.0.0
info:
  title: Inventory Management API
  description: API for inventory management system
  version: 1.0.0
servers:
  - url: https://api.inventory-app.com/v1
    description: Production server
  - url: https://staging.inventory-app.com/v1
    description: Staging server
paths:
  /items:
    get:
      summary: Get all items
      responses:
        '200':
          description: List of all items
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
    post:
      summary: Create new item
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemCreate'
      responses:
        '201':
          description: Item created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
  
  /items/{id}:
    get:
      summary: Get item by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Item details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
    
    put:
      summary: Update item
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemUpdate'
      responses:
        '200':
          description: Item updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'

  /items/barcode/{barcode}:
    get:
      summary: Get item by barcode
      parameters:
        - name: barcode
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Item details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'

  /staff:
    get:
      summary: Get all staff
      responses:
        '200':
          description: List of all staff
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Staff'
    post:
      summary: Create new staff
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaffCreate'
      responses:
        '201':
          description: Staff created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Staff'
  
  /checkoutlogs:
    get:
      summary: Get all checkout logs
      responses:
        '200':
          description: List of all checkout logs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CheckoutLog'
    post:
      summary: Create new checkout log
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckoutLogCreate'
      responses:
        '201':
          description: Checkout log created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckoutLog'

components:
  schemas:
    Item:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        category:
          type: string
        type:
          type: string
        barcode:
          type: string
        condition:
          type: string
        status:
          type: string
        photoPath:
          type: string
          nullable: true
        isActive:
          type: boolean
          default: true
        lastModified:
          type: integer
          format: int64
      required:
        - id
        - name
        - category
        - type
        - barcode
        - condition
        - status
        - isActive
    
    ItemCreate:
      type: object
      properties:
        name:
          type: string
        category:
          type: string
        type:
          type: string
        barcode:
          type: string
        condition:
          type: string
        status:
          type: string
        photoPath:
          type: string
          nullable: true
      required:
        - name
        - category
        - type
        - barcode
        - condition
        - status

    ItemUpdate:
      type: object
      properties:
        name:
          type: string
        category:
          type: string
        type:
          type: string
        barcode:
          type: string
        condition:
          type: string
        status:
          type: string
        photoPath:
          type: string
          nullable: true
        isActive:
          type: boolean
      
    Staff:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        department:
          type: string
        email:
          type: string
        phone:
          type: string
        position:
          type: string
        isActive:
          type: boolean
          default: true
        lastModified:
          type: integer
          format: int64
      required:
        - id
        - name
        - department
        - email
        - phone
        - position
        - isActive
    
    StaffCreate:
      type: object
      properties:
        name:
          type: string
        department:
          type: string
        email:
          type: string
        phone:
          type: string
        position:
          type: string
      required:
        - name
        - department
        - email
        - phone
        - position
    
    CheckoutLog:
      type: object
      properties:
        id:
          type: string
          format: uuid
        itemId:
          type: string
          format: uuid
        staffId:
          type: string
          format: uuid
        checkOutTime:
          type: integer
          format: int64
        checkInTime:
          type: integer
          format: int64
          nullable: true
        photoPath:
          type: string
          nullable: true
        lastModified:
          type: integer
          format: int64
      required:
        - id
        - itemId
        - staffId
        - checkOutTime
    
    CheckoutLogCreate:
      type: object
      properties:
        itemId:
          type: string
          format: uuid
        staffId:
          type: string
          format: uuid
        photoPath:
          type: string
          nullable: true
      required:
        - itemId
        - staffId 